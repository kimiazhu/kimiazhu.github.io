---
layout:     post
title:      "Vim FAQ"
date:       2016-05-16 10:28:00 +08:00
lastmod: 	2016-05-16 10:28:00 +08:00
author:     "KC"
header-img: "img/post-bg-unix-linux.jpg"
tags:
    - Vim
    - Linux
---

# 目录：
{:.no_toc}
* any list
{:toc}

# 1. 分屏

分屏操作使用`Ctrl+w`进行控制。

## 1.1 启动时分屏

通过-O(大写)指定垂直分屏，-o(小写)指定水平分屏。

```bash
# 垂直分2屏幕，分别编辑file1和file2
vim -O2 file1 file2 

# 水平分3屏幕，分别编辑file1、file2和file3
vim -o3 file1 file2 file3
```

## 1.2 关闭分屏

- `Ctrl+w c`: 关闭当前分屏，当若当前已是最后一个分屏则不会退出
- `Ctrl+w q`: 关闭当前分屏，如果只剩最后一个了，则退出Vim

## 1.3 编辑文件时增加分屏

- `Ctrl+w s`: 水平分割当前打开的文件
- `:sp filename`: 水平分割窗口，并在新窗口打开一个新的文件。
- `Ctrl+w v`: 垂直分割当前打开的文件
- `:vsp filename`: 垂直分割窗口，并在新窗口打开一个新的文件。

## 1.4 在分屏间移动光标

Vim中的光标键是`h, j, k, l`，要在各个屏间切换，只需要先按一下`Ctrl+w`

- `Ctrl+w h`: 光标左移
- `Ctrl+w l`: 光标右移
- `Ctrl+w k`: 光标上移
- `Ctrl+w j`: 光标下移
- `Ctrl+w w`: 光标移动到下一个分屏中

> BTW：
> 
> 移动屏幕本身也是`H, J, K, L`四个键，但是移动光标是小写，移动窗体是大写。

## 1.5 调节屏幕尺寸

- `Ctrl+w =`: 让所有窗口等大
- `Ctrl+w +`: 增加当前窗口高度
- `Ctrl+w -`: 减小当前窗口高度
- `Ctrl+w >`: 增加当前窗口宽度
- `Ctrl+w <`: 减小当前窗口宽度

## 1.6 分屏中打开目录

在编辑文件的时候，可以使用命令在新的分屏中浏览当前文件所在目录。

- `:He`: 水平分屏，在下部窗口中浏览目录
- `:He!`: 水平分屏，在上部窗口中浏览目录
- `:Ve`: 垂直分屏，在左侧窗口中浏览目录
- `:Ve!`: 垂直分屏，在右侧窗口中浏览目录

## 1.7 分屏同步移动光标

要同步光标，注意应该先将要同步的分屏的光标移动到需要的位置，然后在多个分屏中分别执行命令：

- `:set scb`: 设置同步移动
- `:set scb!`: 解开同步移动的配置

## 1.8 Tab分屏

```bash
# 同时以tab的方式打开多个文件
vim -p file1 file2 file3
```
- `:Te`: 打开新的Tab页
- `gt`: 跳转到下一个Tab页，注意没有分号
- `gT`: 跳转到上一个Tab页，注意没有分号
- `{n}gt` 或 `:tabm {n}`: 跳转到指定Tab页，注意没有分号，n是具体数字。
- `:tabs`: 浏览当前所有tab页的概况
- `:tabclose {n}` 关闭Tab页，如果后面指定了数字，那就关闭指定页，如果没有就关闭当前页

> BTW
>
> 1. 关于切换tab页，gvim使用`Ctrl+PageDown`和`Ctrl+PageUp`来进行切换
> 
> 2. 如果你想把buffer中的文件全转成tab的话，你可以使用下面的命令:
> `:bufdo tab split`

# 2. 缓冲区

用`:E`命令浏览目录时打开的文件都保存在缓冲区中。可以用以下命令查看缓冲区内容：

![查看缓冲期内容](/attachments/2016-05-16/vim-1.png)

- `:ls`: 查看缓冲区，其中标有`%a`的一行表示当前激活状态的缓冲区。`:ls`输出如上图。
- `:buffer {n}`: 切换到指定缓冲区继续编辑文件, n代表缓冲区编号，在ls命令中能看到
- `:buffer {filepath}`: 同上，但是通过文件名切换

还可以使用以下命令快速在缓冲区间切换：
 
- `:bnext`: 移动到下一缓冲区，缩写为`:bn`
- `:bprevious`: 移动到上一缓冲区，缩写为`:bp`
- `:blast`: 移动到最后一个缓冲区文件，缩写为`:bl`
- `:bfirst`: 移动到第一个缓冲区文件，缩写为`:bf`

前面我们提到一个`%a`标识符，这个表示当前被激活的文件。相关的标记还有：

- `–`: 非活动的缓冲区
- `a`: 当前被激活缓冲区
- `h`: 隐藏的缓冲区
- `%`: 当前的缓冲区
- `#`: 交换缓冲区
- `=`: 只读缓冲区
- `+`: 已经更改的缓冲区


# 3. 关键字补全

无插件的vim也支持关键字补全，补全文本的来源是当前所编辑的文件本身。

- `Ctrl+n`: 自动提示并补全
- `Ctrl+p`: 光标回到默认补全之前的位置

另外还有`Ctrl+x`开头的补全快捷键：

- `Ctrl + X` 和 `Ctrl + D` 宏定义补齐
- `Ctrl + X` 和 `Ctrl + ]` 是Tag 补齐
- `Ctrl + X` 和 `Ctrl + F` 是文件名 补齐
- `Ctrl + X` 和 `Ctrl + I` 也是关键词补齐，但是关键后会有个文件名，告诉你这个关键词在哪个文件中
- `Ctrl + X` 和 `Ctrl +V` 是表达式补齐
- `Ctrl + X` 和 `Ctrl +L` 整个行补齐

# 4. 移动光标

- `h`,`j`,`k`,`l`: 左/下/上/右移动一个字符
- `0`: 数字零，到行头
- `$`: 到本行行尾
- `^`: 到本行第一个不是blank字符的位置
- `g_`: 到本行最后一个不是blank字符的位置
- `w`: 移动到下一个单词开头，`W`: 移动到下一个单词（空白字符分隔）开头(word)
- `e`: 移动到下一个单词结尾，`E`: 移动到下一个单词（空白字符分隔）结尾(end)
- `b`: 移动到前一个单词
- `G`: 文件最后一行
- `gg`: 文件第一行，相当于`1G`或者`:1`
- `{n}G`: 或者 `:{n}`: 跳转到文件第n行
- `{n}e`: 往后移动n个单词

# 5. 单词或行编辑

- `dd`: 剪切行
- `yy`: 复制行，相当于 `ddP`
- `p`: 光标后粘贴；`P`: 光标前粘贴
- `u`: undo
- `Ctrl+u`: 在输入模式下执行的撤销操作
- `Ctrl-r`: redo
- `dw`: 剪切单词，`dW`: 剪切单词（空白字符分隔）
- `D`: 剪切到行尾
- `ye`: 复制一个单词
- `gu`: 变小写，`gU`: 变大写。用法是：`guw`会使光标所在单词变小写；`gU$`会使光标到行尾所有字符变大写；`gu3e`会使光标往后三个单词变成小写。
- `>>` 和 `<<`: 向右/向左缩进当前行
- `2,8>`: 2-8行缩进，`4,6<`: 4-6行反缩进
- 按`v`进入选择模式，移动光标选择多行，然后执行`>`缩进一次，执行`2>`则会缩进两次