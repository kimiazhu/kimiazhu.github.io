---
layout:     post
title:      "Cocos2d-x精灵加亮及灰度调整"
date:       2013-11-06 10:33
author:     "KC"
header-img: "img/post-bg-unix-linux.jpg"
tags:
    - Cocos2d-x
    - Android
    - iOS
    - Windows Phone
    - Visual Studio
    - C++
---

转一篇，不过本位介绍的加亮和之前我想做的加亮闪缩效果还是有差别。

主要的思路是通过CCImage先载入图片，然后getData()获取图片数据，接着逐一获取各像素的RGB值（代码基于jpg，若是png则需要获取RGBA值），通过相应方法修改各像素点的值。之后将该CCImange加载到CCTexture2D中，再由CCSprite载入，然后即可自由操作CCSprite。

以上相当于是在生成CCSprite时载入已加亮或变灰了的图片，至于如何将已有的CCSprite加亮或变灰，尚等研究。


`C++ Code:`

	//根据现有CCSprite，变亮和变灰
	static CCSprite* graylightWithCCSprite(CCSprite* oldSprite,bool isLight)
	{
	    //CCSprite转成CCimage
	   &nbsp;CCPoint p = oldSprite->getAnchorPoint();
	    oldSprite->setAnchorPoint(ccp(0,0));
	    CCRenderTexture *outTexture = CCRenderTexture::create((int)oldSprite->getContentSize().width,(int)oldSprite->getContentSize().height);
	    outTexture->begin();
	    oldSprite->visit();
	    outTexture->end();
	    oldSprite->setAnchorPoint(p);
	    
	    CCImage* finalImage = outTexture->newCCImage();
	    unsigned char *pData = finalImage->getData();
	    int iIndex = 0;
	    
	    if(isLight)
	    {
	        for (int i = 0; i < finalImage->getHeight(); i ++)
	        {
	            for (int j = 0; j < finalImage->getWidth(); j ++)
	            {
	                // highlight
	                int iHightlightPlus = 50;
	                int iBPos = iIndex;
	                unsigned int iB = pData[iIndex];
	                iIndex ++;
	                unsigned int iG = pData[iIndex];
	                iIndex ++;
	                unsigned int iR = pData[iIndex];
	                iIndex ++;
	                //unsigned int o = pData[iIndex];
	                iIndex ++;  //原来的示例缺少
	                iB = (iB + iHightlightPlus > 255 ? 255 : iB + iHightlightPlus);
	                iG = (iG + iHightlightPlus > 255 ? 255 : iG + iHightlightPlus);
	                iR = (iR + iHightlightPlus > 255 ? 255 : iR + iHightlightPlus);
	                //            iR = (iR < 0 ? 0 : iR);
	                //            iG = (iG < 0 ? 0 : iG);
	                //            iB = (iB < 0 ? 0 : iB);
	                pData[iBPos] = (unsigned char)iB;
	                pData[iBPos + 1] = (unsigned char)iG;
	                pData[iBPos + 2] = (unsigned char)iR;
	            }
	        }
	    }else{
	        for (int i = 0; i < finalImage->getHeight(); i ++)
	        {
	            for (int j = 0; j < finalImage->getWidth(); j ++)
	            {
	                // gray
	                int iBPos = iIndex;
	                unsigned int iB = pData[iIndex];
	                iIndex ++;
	                unsigned int iG = pData[iIndex];
	                iIndex ++;
	                unsigned int iR = pData[iIndex];
	                iIndex ++;
	                //unsigned int o = pData[iIndex];
	                iIndex ++; //原来的示例缺少
	                unsigned int iGray = 0.3 * iR + 0.4 * iG + 0.2 * iB;
	                pData[iBPos] = pData[iBPos + 1] = pData[iBPos + 2] = (unsigned char)iGray;
	            }
	        }
	    }
	    
	    CCTexture2D *texture = new CCTexture2D;
	    texture->initWithImage(finalImage);
	    CCSprite* newSprite = CCSprite::createWithTexture(texture);
	    delete finalImage;
	    texture->release();
	    return newSprite;
	}

## 参考

*有两处注释的地方是对原来例子修改的地方，不知道什么原因，原来的例子少了一个alpha通道* 


- [精灵加亮及变灰效果](http://www.cocoachina.com/gamedev/misc/2012/0530/4307.html)
- [Cocos2d-x 2.x CCSprite 灰白图的生成（利用shader设置）](http://blog.csdn.net/yanghuiliu/article/details/8140774)
- [将sprite转化为UIImage](http://home.cnblogs.com/group/topic/60979.html)
